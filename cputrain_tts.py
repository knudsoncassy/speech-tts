import os from TTS.utils.manage import ModelManager from TTS.trainer import Trainer, TrainerArgs from pathlib import Path DATA_DIR = Path(__file__).resolve().parent.parent / "data" MODELS_DIR = Path(__file__).resolve().parent.parent / "models" CHECKPOINTS = MODELS_DIR / "checkpoints" CHECKPOINTS.mkdir(parents=True, exist_ok=True) # Training arguments trainer_args = TrainerArgs( output_path=str(CHECKPOINTS), datasets=[{ "formatter": "ljspeech", "dataset": str(DATA_DIR), "meta_file_train": "metadata.csv", "path": str(DATA_DIR), }], restore_path=str(CHECKPOINTS / "best_model.pth.tar"), # Resume if exists model="tts_models/en/ljspeech/tacotron2-DDC", # Base pretrained model batch_size=32, eval_batch_size=16, eval_split_max_size=50, num_loader_workers=4, num_eval_loader_workers=2, run_eval=True, test_delay_epochs=-1, epochs=200, use_cuda=True ) def train_tts(): trainer = Trainer(trainer_args) trainer.fit() if __name__ == "__main__": train_tts()
